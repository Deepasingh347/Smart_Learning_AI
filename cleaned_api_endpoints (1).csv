method,path,summary,description,parameters,responses
GET,/api/businesses.v1/{orgId},Get organization information by orgId.,Get organization information by orgId.,"[{'name': 'orgId', 'description': 'The ID of the organization to retrieve data for.', 'in': 'path', 'required': True, 'schema': {'type': 'string'}}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/BusinessOrganizations'}}}}, '400': {'$ref': '#/components/responses/ERROR_400'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
GET,/api/businesses.v1/{orgId}/users,Get all users for an organization.,Returns a paginated list of users within your organization.,"[{'name': 'orgId', 'description': 'The ID of the organization to retrieve data for.', 'in': 'path', 'required': True, 'schema': {'type': 'string'}}, {'name': 'limit', 'in': 'query', 'description': 'The maximum number of users to return.', 'required': False, 'schema': {'type': 'integer', 'minimum': 1, 'maximum': 1000, 'default': 100}, 'example': 10}, {'name': 'start', 'in': 'query', 'description': 'The starting index of the users to return.', 'required': False, 'schema': {'type': 'string', 'default': '0'}, 'example': '0'}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/BusinessOrganizationUsers'}}}}, '400': {'$ref': '#/components/responses/ERROR_400'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
POST,/api/businesses.v1/{orgId}/users,Update or delete organization user by email.,Updates or deletes a user in the organization by email.,"[{'name': 'orgId', 'description': 'The ID of the organization to retrieve data for.', 'in': 'path', 'required': True, 'schema': {'type': 'string'}}, {'name': 'action', 'in': 'query', 'required': True, 'description': 'The action you pass to this API, which should either be updateByEmail or deleteByEmail.', 'schema': {'type': 'string', 'enum': ['updateByEmail', 'deleteByEmail']}}, {'name': 'email', 'description': 'The user email address.', 'in': 'query', 'required': True, 'schema': {'type': 'string'}}, {'name': 'invitationsOnly', 'description': 'Boolean parameter to tell the Api whether to delete just invitations, or additionally program memberships. Used with action = deleteByEmail.', 'in': 'query', 'required': False, 'schema': {'type': 'boolean', 'default': False}}, {'name': 'softDelete', 'description': 'Boolean parameter to tell businessApi whether to use soft-deletion for program memberships. Only applicable when invitationsOnly = false. Used with action = deleteByEmail.', 'in': 'query', 'required': False, 'schema': {'type': 'boolean', 'default': False}}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/EnterpriseUserResourceModel'}}}}, '400': {'$ref': '#/components/responses/ERROR_400'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
GET,/api/businesses.v1/{orgId}/programs,Get programs for an organization.,Returns a paginated list of active learning programs created within your account.,"[{'name': 'orgId', 'description': 'The ID of the organization to retrieve programs for.', 'in': 'path', 'required': True, 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'name': 'ids', 'description': 'Include a comma-separated list of program ids to fetch specific records.', 'in': 'query', 'required': False, 'schema': {'type': 'string'}, 'example': 'k6a7z5K_Ee2fXxKzGPkj0q,y0TO1t4fEe2bIBLACu-NKq'}, {'name': 'excludeContent', 'description': 'A flag to include or exclude program content with response.', 'in': 'query', 'required': True, 'schema': {'type': 'boolean', 'default': False}, 'example': False}, {'name': 'limit', 'in': 'query', 'description': 'The maximum number of programs to be returned.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 100}, 'example': 50}, {'name': 'start', 'in': 'query', 'description': 'The starting index of the programs to be returned.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 0}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/BusinessPrograms'}}}}, '400': {'$ref': '#/components/responses/ERROR_400'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
POST,/api/businesses.v1/{orgId}/programs/{programId}/users,Update user data in organization program.,Update a user data in organization's program by email or externalId.,"[{'in': 'path', 'name': 'orgId', 'schema': {'type': 'string'}, 'description': 'The unique identifier for your organization.', 'required': True, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'schema': {'type': 'string'}, 'description': 'The identifier of a program for the organization.', 'required': True, 'example': 'k6a7z5K_Ee2fXxKzGPkj0q'}, {'name': 'action', 'in': 'query', 'required': True, 'description': 'The action you pass to this API, it should be updateUserByEmail or updateUserByExternalId.', 'schema': {'type': 'string', 'enum': ['updateUserByEmail', 'updateUserByExternalId']}}, {'name': 'email', 'in': 'query', 'schema': {'type': 'string'}, 'description': ""The email address that identifies the user. It's required when action is updateUserByEmail."", 'required': False, 'example': 'user@coursera.org'}, {'name': 'externalId', 'in': 'query', 'schema': {'type': 'string'}, 'description': ""The external id that identifies the user. It's required when action is updateUserByExternalId."", 'required': False, 'example': 'user_external_id'}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/EnterpriseProgramUserUpdateResponse'}}}}, '400': {'$ref': '#/components/responses/ERROR_400'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
GET,/api/businesses.v1/{orgId}/contents,Retrieve contents for your organization,"Returns a paginated list of courses and specializations that are available through your learning programs. If a program has a specialization, we also include the courses within it","[{'name': 'orgId', 'in': 'path', 'required': True, 'schema': {'type': 'string'}, 'description': 'The unique identifier for your organization.', 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'name': 'start', 'in': 'query', 'required': False, 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'description': 'Index of the first result to be returned.', 'example': 0}, {'name': 'limit', 'in': 'query', 'required': False, 'schema': {'type': 'integer', 'format': 'int32', 'default': 100}, 'description': 'The maximum number of contents to be returned.', 'example': 50}, {'name': 'modifiedSinceTimestamp', 'in': 'query', 'required': False, 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'description': 'Filter to only return contents that were added/removed/modified after the provided timestamp. modifiedSinceTimestamp is in epoch seconds and default is 0 which returns all contents. Its value must be a positive number.', 'example': 1733368795}, {'name': 'contentTypes', 'in': 'query', 'required': False, 'schema': {'type': 'string'}, 'description': 'Filter to only return results for specific content types. ContentTypes can be one or more from ""Course"", ""Specialization"" or ""Video"". Default is all content types.', 'examples': {'bySpecializationCourse': {'value': '&contentTypes=Specialization,Course'}, 'byVideo': {'value': '&contentTypes=Video'}}}, {'name': 'q', 'in': 'query', 'required': False, 'schema': {'type': 'string', 'enum': ['byProgramIds']}, 'description': 'Filter to only return results for a program or programs. Default is all programs.', 'example': '&q=byProgramIds&programIds=k6a7z5K_Ee2fXxKzGPkj0q,y0TO1t4fEe2bIBLACu-NKq'}, {'name': 'programIds', 'in': 'query', 'required': False, 'schema': {'type': 'string'}, 'description': 'Required if q=byProgramIds is present. A list of unique ids for programs in your organization. If this parameter is provided the content will be filtered only from these programs.', 'example': '&q=byProgramIds&programIds=k6a7z5K_Ee2fXxKzGPkj0q,y0TO1t4fEe2bIBLACu-NKq'}]","{'200': {'description': 'Successful response containing a list of contents and pagination data.', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ContentList'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant_01': {'$ref': '#/components/examples/400_BadRequest_Variant_02_DEFAULT'}, 'variant_02': {'$ref': '#/components/examples/400_BadRequest_Variant_03_DEFAULT'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
GET,/api/businesses.v1/{orgId}/contents/{id},Retrieve a content's detail by an id,Returns a list that contains one object.,"[{'name': 'orgId', 'in': 'path', 'required': True, 'schema': {'type': 'string'}, 'description': 'The unique identifier for your organization.', 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'string'}, 'description': 'A id in the ContentType~Id format.', 'example': 'Course~rUHfSakHEeeQ3gpuC4Fs_g-HixlS'}]","{'200': {'description': 'Successful response containing a content object.', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ContentList'}, 'example': {'elements': [{'subtitleLanguageCodes': ['ko'], 'difficultyLevel': 'INTERMEDIATE', 'contentId': 'aRxESQNMEeuH3Q6N8dCjzw', 'description': 'This specialization is intended for aspiring learners and professionals seeking to hone their skills in the quantitative finance area. Through a series of 5 courses, we will cover derivative pricing, asset allocation, portfolio optimization as well as other applications of financial engineering such as real options, commodity and energy derivatives and algorithmic trading. Those financial engineering topics will prepare you well for resolving related problems, both in the academic and industrial worlds.', 'languageCode': 'en', 'instructors': [{'photoUrl': 'https://coursera-instructor-photos.s3.amazonaws.com/adfbasdf.jpeg', 'name': 'Joe Doe 1', 'title': 'Tang Family Professor', 'department': 'Industrial Engineering and Operations Research Department'}, {'photoUrl': 'https://coursera-instructor-photos.s3.amazonaws.com/afdasdf.jpg', 'name': 'Joe Doe 2', 'title': 'Professor of Professional Practice', 'department': 'Department of Industrial Engineering and Operations Research'}], 'partners': [{'name': 'Columbia University', 'logoUrl': 'https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://coursera-university-assets.s3.amazonaws.com/9b/42f2eca2f10769400d1f8519892413/ColumbiaLOGO.png'}], 'name': 'Financial Engineering and Risk Management', 'programs': [{'contentUrl': 'https://www.coursera.org/programs/learning-program-uzmjj?productId=aRxESQNMEeuH3Q6N8dCjzw&productType=s12n&showMiniModal=true&isExternal=true', 'programId': 'k6a7z5K_Ee2fXxKzGPkj0Q'}, {'contentUrl': 'https://www.coursera.org/programs/test-program-1-lvseg?productId=aRxESQNMEeuH3Q6N8dCjzw&productType=s12n&showMiniModal=true&isExternal=true', 'programId': 'y0TO1t4fEe2bIBLACu-NKQ'}], 'id': 'Specialization~aRxESQNMEeuH3Q6N8dCjzw', 'extraMetadata': {'typeName': 'specializationMetadata', 'definition': {'courseIds': [{'contentId': 'MzfG3f9QEei65w7Gl4XZlA', 'contentType': 'Course'}, {'contentId': 'NyzO9f9QEeiU2RImQolf6g', 'contentType': 'Course'}], 'promoPhoto': 'https://d15cw65ipctsrr.cloudfront.net/b9/0c619aede341858f59410b70c1178a/shutterstock_1923576143-1-.jpg', 'tagline': 'Advance Your Knowledge in Financial Engineering'}, 'contentType': 'Specialization', 'slug': 'financialengineering'}, 'lastUpdatedAt': 1733368795}], 'paging': {}, 'linked': {}}}}}, '400': {'$ref': '#/components/responses/ERROR_400'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant_01': {'$ref': '#/components/examples/404_NotFound_Variant_01_DEFAULT'}, 'variant_02': {'$ref': '#/components/examples/404_NotFound_Variant_02_CONTENT_ID_NOT_IN_ORG'}}}}}}"
GET,/api/businesses.v1/{orgId}/programs/{programId}/courseMaterials/{courseId},Get course materials,Returns a paginated list of individual course materials for a given course.,"[{'in': 'path', 'name': 'orgId', 'schema': {'type': 'string'}, 'description': 'The unique identifier for your organization.', 'required': True, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'schema': {'type': 'string'}, 'description': 'The identifier of a program for the organization.', 'required': True, 'example': 'k6a7z5K_Ee2fXxKzGPkj0q'}, {'in': 'path', 'name': 'courseId', 'schema': {'type': 'string'}, 'description': 'The identifier of a course in the program.', 'required': True, 'example': 'daG-a-O1EeijKBISCWxf6g'}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'elements': {'type': 'array', 'items': {'$ref': '#/components/schemas/CourseMaterials'}}, 'paging': {'type': 'object'}, 'linked': {'type': 'object'}}}}}}, '400': {'$ref': '#/components/responses/ERROR_400'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant_01': {'$ref': '#/components/examples/404_NotFound_Variant_01_DEFAULT'}, 'variant_02': {'$ref': '#/components/examples/404_NotFound_Variant_02_COURSE_NOT_IN_PROGRAM'}}}}}}"
GET,/api/businesses.v1/{orgId}/programs/{programId}/programEnrollments/{external_id~content_type~content_id},Get user enrollment state in a course or a specialization,"For a specific user, return whether they are currently enrolled in a specific course","[{'in': 'path', 'name': 'orgId', 'required': True, 'description': 'The unique identifier for your organization.', 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'required': True, 'description': 'The identifier of the program for the organization.', 'schema': {'type': 'string'}, 'example': 'k6a7z5K_Ee2fXxKzGPkj0q'}, {'in': 'path', 'name': 'external_id~content_type~content_id', 'required': True, 'description': 'Composed identifier with external ID, content type and content ID separated by tildes (~)', 'schema': {'type': 'string'}, 'example': 'SU3408075~Course~uR9ep230EeqX8gpNBtLRnw'}]","{'200': {'description': 'User enrollment state in the course or specialization', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/EnrollmentState'}}}}, '400': {'$ref': '#/components/responses/ERROR_400'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant_01': {'$ref': '#/components/examples/404_NotFound_Variant_01_DEFAULT'}, 'variant_02': {'$ref': '#/components/examples/404_NotFound_Variant_02_USER_NOT_FOUND_IN_PROGRAM'}}}}}}"
POST,/api/businesses.v1/{orgId}/programs/{programId}/programEnrollments,Enroll a selected user into a specific course,Enrolls a selected user into a specific course. Note that this will only work if the user already has a Coursera account and a current program membership.,"[{'in': 'path', 'name': 'orgId', 'description': 'The ID of the organization.', 'required': True, 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'description': 'The ID of the program.', 'required': True, 'schema': {'type': 'string'}, 'example': '4LVhtQQNEemZUwrw3z8SgA'}]","{'201': {'description': 'User enrollment created', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserMembershipResponse'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant_01': {'$ref': '#/components/examples/400_BadRequest_Variant_03_PROGRAM_ENROLLMENTS_INVALID_JSON'}, 'variant_02': {'$ref': '#/components/examples/404_NotFound_Variant_02_USER_NOT_FOUND_IN_PROGRAM'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}}"
GET,/api/businesses.v1/{orgId}/programs/{programId}/curriculumCollections,Get list of curriculum collections in a program,Returns a paginated list of curriculum collections in your program.,"[{'in': 'path', 'name': 'orgId', 'description': 'The unique identifier for your organization', 'schema': {'type': 'string'}, 'required': True, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'description': 'The identifier of a program for the organization.', 'schema': {'type': 'string'}, 'required': True, 'example': 'k6a7z5K_Ee2fXxKzGPkj0q'}, {'in': 'query', 'name': 'start', 'description': 'Index of the first result to be returned.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 0}, {'in': 'query', 'name': 'limit', 'description': 'Maximum number of results to be returned.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 100}, 'example': 50}]","{'200': {'description': 'Successful response containing a list of curriculum collections and pagination data.', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CurriculumCollection'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant': {'$ref': '#/components/examples/400_BadRequest_Variant_03_DEFAULT'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
GET,/api/businesses.v1/{orgId}/enrollmentReports,Get member progress across an organization,"Returns a paginated list of course progress summaries for all users that are managed in your account. Each entry in the list represents a single user’s progress for a single course. The overall progress is a number between 0 to 100, highlighting percentage of items completed by the learner. It is possible for a learner to have COMPLETED a course but have overall progress < 100, as a learner needs only to pass all graded items in order to complete a course.","[{'in': 'path', 'name': 'orgId', 'schema': {'type': 'string'}, 'required': True, 'description': 'The unique identifier for your organization.', 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'name': 'start', 'in': 'query', 'description': 'Index of the first result to be returned.', 'required': False, 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of results to be returned.', 'required': False, 'schema': {'type': 'integer', 'format': 'int32', 'default': 100}, 'example': 50}, {'name': 'includeS12n', 'in': 'query', 'description': 'Include S12n (Specialization) enrollments.', 'required': False, 'schema': {'type': 'boolean', 'default': False}, 'example': True}, {'name': 'q', 'in': 'query', 'description': 'Query parameter can be one of ""byProgramId"" or ""byUserProgramId"". ""byProgramId"" will return enrollments for a specified programId and ""byUserProgramId"" will return enrollments for a given user externalId in a given program programId.', 'required': False, 'schema': {'type': 'string', 'enum': ['byProgramId', 'byUserProgramId']}, 'examples': {'byProgramId': {'value': '&q=byProgramId&programId=k6a7z5K_Ee2fXxKzGPkj0q'}, 'byUserProgramId': {'value': '&q=byUserProgramId&programId=k6a7z5K_Ee2fXxKzGPkj0q&externalId=SU3408075'}}}, {'name': 'programId', 'in': 'query', 'description': 'Query will return enrollments for specified programId in this organization. This is required when ""q"" is set to either ""byProgramId"" or ""byUserProgramId"".', 'schema': {'type': 'string'}, 'example': 'k6a7z5K_Ee2fXxKzGPkj0q'}, {'name': 'externalId', 'in': 'query', 'description': 'Unique identifier of the user. Required when ""q"" is set to ""byUserProgramId"".', 'schema': {'type': 'string'}, 'example': 'SU3408075'}, {'name': 'includeDeletedMembers', 'in': 'query', 'description': 'If set to true, will include deleted members.', 'required': False, 'schema': {'type': 'boolean'}, 'example': False}, {'name': 'enrollAtBefore', 'in': 'query', 'description': 'Range query filter based on timestamp in epoch milliseconds. All enrollments with enrollAt timestamp greater than input timestamp will be filtered out.', 'required': False, 'schema': {'type': 'integer', 'format': 'int64'}, 'example': 1687289825474}, {'name': 'enrollAtAfter', 'in': 'query', 'description': 'Range query filter based on timestamp in epoch milliseconds. All enrollments with enrollAt timestamp lower than input timestamp will be filtered out.', 'required': False, 'schema': {'type': 'integer', 'format': 'int64'}, 'example': 1687289825474}, {'name': 'lastActivityBefore', 'in': 'query', 'description': 'Range query filter based on timestamp in epoch milliseconds. All enrollments with lastActivityAt timestamp greater than AND equal to input timestamp will be filtered out.', 'required': False, 'schema': {'type': 'integer', 'format': 'int64'}, 'example': 1687289825474}, {'name': 'lastActivityAfter', 'in': 'query', 'description': 'Range query filter based on timestamp in epoch milliseconds. All enrollments with lastActivityAt timestamp lower than AND equal to input timestamp will be filtered out.', 'required': False, 'schema': {'type': 'integer', 'format': 'int64'}, 'example': 1687289825474}, {'name': 'completedAtBefore', 'in': 'query', 'description': 'Range query filter based on timestamp in epoch milliseconds. All enrollments with completedAt timestamp greater than input timestamp will be filtered out.', 'required': False, 'schema': {'type': 'integer', 'format': 'int64'}, 'example': 1687289825474}, {'name': 'completedAtAfter', 'in': 'query', 'description': 'Range query filter based on timestamp in epoch milliseconds. All enrollments with completedAt timestamp lower than input timestamp will be filtered out.', 'required': False, 'schema': {'type': 'integer', 'format': 'int64'}, 'example': 1687289825474}, {'name': 'useCursorPagination', 'in': 'query', 'description': 'Use cursor-based pagination instead of the default index-based pagination.', 'required': False, 'schema': {'type': 'boolean'}, 'example': False}, {'name': 'includeExpiredContracts', 'in': 'query', 'description': 'A flag to indicate if the result should include historical data from expired contracts.', 'required': False, 'schema': {'type': 'boolean'}, 'example': False}]","{'200': {'description': '200 OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/EnrollmentReportResponse'}}}}, '400': {'$ref': '#/components/responses/ERROR_400'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
GET,/api/businesses.v1/{orgId}/courseGradebookReports,Get member progress for individual course items,Retrieve course item-specific grading information with search criteria,"[{'name': 'orgId', 'in': 'path', 'required': True, 'description': 'The unique identifier for your organization.', 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'name': 'q', 'in': 'query', 'required': True, 'description': 'Query parameter that only supports ""search"" for now.', 'schema': {'type': 'string', 'enum': ['search']}, 'example': '&search'}, {'name': 'programId', 'in': 'query', 'required': False, 'description': 'An optional program id value for search action.', 'schema': {'type': 'string'}, 'example': 'k6a7z5K_Ee2fXxKzGPkj0q'}, {'name': 'courseId', 'in': 'query', 'required': False, 'description': 'An optional course id value to filter search results only for one course.', 'schema': {'type': 'string'}, 'example': 'B8Syn4zlEeeFiQ7tViah-g'}, {'name': 'emailOrExternalId', 'in': 'query', 'required': False, 'description': ""An optional user's email or external id value to filter search results only for one user."", 'schema': {'type': 'string'}, 'example': 'user1@coursera.org'}, {'name': 'includeDeletedMembers', 'in': 'query', 'required': False, 'description': 'An optional boolean flag to include results of deleted members.', 'schema': {'type': 'boolean', 'default': False}, 'example': True}, {'name': 'start', 'in': 'query', 'required': False, 'description': 'Index of the first result to be returned.', 'schema': {'type': 'string', 'default': 0}, 'example': 0}, {'name': 'limit', 'in': 'query', 'required': False, 'description': 'Maximum number of results to be returned in one page.', 'schema': {'type': 'integer', 'format': 'int32', 'minimum': 1, 'maximum': 1000}, 'example': 50}]","{'200': {'description': 'Course item-specific grading information for given search criteria', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'elements': {'type': 'array', 'items': {'$ref': '#/components/schemas/CourseGradebookReport'}}, 'paging': {'type': 'object', 'properties': {'next': {'type': 'integer', 'format': 'int32'}, 'total': {'type': 'integer', 'format': 'int32'}}}, 'linked': {'type': 'object'}}}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant': {'$ref': '#/components/examples/400_BadRequest_Variant_02_DEFAULT'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
GET,/api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId},Check whether user is in a program,"This checks whether a user is a member of a specified program. The external user id in the request will be set either via SSO, or added when inviting the user.","[{'in': 'path', 'name': 'orgId', 'description': 'The ID of the organization.', 'required': True, 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'description': 'The ID of the program.', 'required': True, 'schema': {'type': 'string'}, 'example': '4LVhtQQNEemZUwrw3z8SgA'}, {'in': 'path', 'name': 'programId~externalId', 'description': 'Composed identifier with program ID and external ID separated by tilde (~).', 'required': True, 'schema': {'type': 'string'}, 'example': '4LVhtQQNEemZUwrw3z8SgA~johndoe-sample-domain-ID'}]","{'200': {'description': 'User is a member of the specified program', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserMembershipResponse'}}}}, '400': {'$ref': '#/components/responses/ERROR_400'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant_01': {'$ref': '#/components/examples/404_NotFound_Variant_01_DEFAULT'}, 'variant_02': {'$ref': '#/components/examples/404_NotFound_Variant_02_NO_PROGRAM_MEMBERSHIP'}}}}}}"
DELETE,/api/businesses.v1/{orgId}/programs/{programId}/memberships/{programId~externalId},Delete membership from a program,Delete a user from the program. The membership id here is the id returned by the API call to list of memberships. The learner will need to be reinvited to rejoin the program.,"[{'in': 'path', 'name': 'orgId', 'description': 'The ID of the organization.', 'required': True, 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'description': 'The ID of the program.', 'required': True, 'schema': {'type': 'string'}, 'example': '4LVhtQQNEemZUwrw3z8SgA'}, {'in': 'path', 'name': 'programId~externalId', 'description': 'Composed identifier with program ID and external ID separated by tilde (~).', 'required': True, 'schema': {'type': 'string'}, 'example': '4LVhtQQNEemZUwrw3z8SgA~johndoe-sample-domain-ID'}, {'in': 'query', 'name': 'softDelete', 'description': 'If set to true, allows the deleted member to rejoin the program without the need to be reinvited. Default is false.', 'schema': {'type': 'boolean', 'default': False}, 'required': False, 'example': True}]","{'204': {'description': 'If the delete is successful, the response should be a 204 code with no additional content.'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}}"
POST,/api/businesses.v1/{orgId}/programs/{programId}/memberships,Create a program membership for the user,Creates a program membership for the user. Note that this will only work if the user already has a Coursera account.,"[{'in': 'path', 'name': 'orgId', 'description': 'The ID of the organization.', 'required': True, 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'description': 'The ID of the program.', 'required': True, 'schema': {'type': 'string'}, 'example': '4LVhtQQNEemZUwrw3z8SgA'}]","{'201': {'description': 'User Program Membership Created', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserMembershipResponse'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant_01': {'$ref': '#/components/examples/400_BadRequest_Variant_03_USER_EMAIL_NOT_VERIFIED'}, 'variant_02': {'$ref': '#/components/examples/400_BadRequest_Variant_03_PROGRAM_MEMBERSHIPS_INVALID_JSON'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
GET,/api/businesses.v1/{orgId}/programs/{programId}/memberships,Get list of memberships in a program,Returns a paginated list of accepted members in your program.,"[{'in': 'path', 'name': 'orgId', 'description': 'The ID of the organization.', 'required': True, 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'description': 'The ID of the program.', 'required': True, 'schema': {'type': 'string'}, 'example': 'p5Zp4c0nEea0zwpn63qgwg'}, {'in': 'query', 'name': 'start', 'description': 'Index of the first result to be returned. Default is 0.', 'required': False, 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 0}, {'in': 'query', 'name': 'limit', 'description': 'Maximum number of results to be returned. Default is 100.', 'required': False, 'schema': {'type': 'integer', 'format': 'int32', 'default': 100}, 'example': 10}]","{'200': {'description': 'Paginated list of accepted members in your program', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ProgramMembershipsResponse'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant': {'$ref': '#/components/examples/400_BadRequest_Variant_03_DEFAULT'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
POST,/api/businesses.v1/{orgId}/programs/{programId}/invitations,Invite a single user to a program,This adds a user as an invitee to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.,"[{'in': 'path', 'name': 'orgId', 'description': 'The ID of the organization.', 'required': True, 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'description': 'The ID of the program.', 'required': True, 'schema': {'type': 'string'}, 'example': '4LVhtQQNEemZUwrw3z8SgA'}, {'in': 'query', 'name': 'contractId', 'description': 'Id of the specific contract to invite a learner to. Only needed if there are multiple contracts attached to the program.', 'schema': {'type': 'string'}, 'required': False, 'example': 'kc1ttlEmEeqWIIhJzaiASQ'}]","{'201': {'description': 'User invited to a program', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserInvitation'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant_01': {'$ref': '#/components/examples/400_BadRequest_Variant_03_PROGRAM_INVITEE_ERROR_EXISTING_INVITATION_FOR_EMAIL'}, 'variant_02': {'$ref': '#/components/examples/400_BadRequest_Variant_03_PROGRAM_INVITATIONS_INVALID_JSON'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
GET,/api/businesses.v1/{orgId}/programs/{programId}/invitations,Get list of invitations in a program,Returns a paginated list of pending invitations in your program.,"[{'in': 'path', 'name': 'orgId', 'description': 'The ID of the organization.', 'required': True, 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'description': 'The ID of the program.', 'required': True, 'schema': {'type': 'string'}, 'example': 'p5Zp4c0nEea0zwpn63qgwg'}, {'in': 'query', 'name': 'start', 'description': 'Index of the first result to be returned. Default is 0.', 'required': False, 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 0}, {'in': 'query', 'name': 'limit', 'description': 'Maximum number of results to be returned. Default is 100.', 'required': False, 'schema': {'type': 'integer', 'format': 'int32', 'default': 100}, 'example': 10}]","{'200': {'description': 'Paginated list of pending invitations in a program', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'elements': {'type': 'array', 'items': {'$ref': '#/components/schemas/PendingInvitation'}}, 'paging': {'$ref': '#/components/schemas/Pagination'}}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
POST,/api/businesses.v1/{orgId}/programs/{programId}/invitations?action=multiCreate,Invite multiple users to a program,This adds multiple users as invitees to a program. The external user id in the request can be an LMS / App specific identifier that can be later used for downstream calls. You can also trigger the invitation email to be sent automatically by specifying true for sendEmail in the request.,"[{'in': 'path', 'name': 'orgId', 'description': 'The ID of the organization.', 'required': True, 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'description': 'The ID of the program.', 'required': True, 'schema': {'type': 'string'}, 'example': '4LVhtQQNEemZUwrw3z8SgA'}, {'in': 'query', 'name': 'contractId', 'description': 'Id of the specific contract to invite a learner to. Only needed if there are multiple contracts attached to the program.', 'schema': {'type': 'string'}, 'required': False, 'example': 'kc1ttlEmEeqWIIhJzaiASQ'}]","{'200': {'description': 'Multiple users invited to a program', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/MultipleUserInvitationResponse'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant_01': {'$ref': '#/components/examples/400_BadRequest_Variant_03_PROGRAM_INVITATIONS_INVALID_JSON'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'$ref': '#/components/responses/ERROR_404'}}"
DELETE,/api/businesses.v1/{orgId}/programs/{programId}/invitations/{programId~externalId},Delete invitation from a program,Delete a pending program invitation.,"[{'in': 'path', 'name': 'orgId', 'description': 'The ID of the organization.', 'required': True, 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'programId', 'description': 'The ID of the program.', 'required': True, 'schema': {'type': 'string'}, 'example': '4LVhtQsdfsdfrw3z8SgA'}, {'in': 'path', 'name': 'programId~externalId', 'description': 'Composed identifier with program ID and external ID separated by tilde (~).', 'required': True, 'schema': {'type': 'string'}, 'example': '4LVhtQsdfsdfrw3z8SgA~johndoe-sample-domain-ID'}]","{'204': {'description': 'No content is returned with this response, only the status code 204.'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}}"
DELETE,/api/businesses.v1/{orgId}/users/{externalId},Delete a user from all programs,Delete a user from all programs. This also revokes access to the corresponding courses/specializations in the programs.,"[{'in': 'path', 'name': 'orgId', 'description': 'The ID of the organization.', 'required': True, 'schema': {'type': 'string'}, 'example': 'DjYCkBQTQV69TtWA7RuNug'}, {'in': 'path', 'name': 'externalId', 'description': 'The external ID of the user to be deleted.', 'required': True, 'schema': {'type': 'string'}, 'example': 'johndoe-sample-domain-ID'}, {'in': 'query', 'name': 'softDelete', 'description': 'If set to true, allows the deleted member to rejoin the program without the need to be reinvited. Default is false.', 'schema': {'type': 'boolean', 'default': False}, 'required': False, 'example': True}]","{'204': {'description': 'No content is returned with this response, only the status code 204.'}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}}"
GET,/api/rest/v1/enterprise/programs/{programId}/skillsets,Get a list of Skillsets in an enterprise program.,Returns a paginated list of all SkillSets in your enterprise program. Each entry in the list represents a single SkillSet.,"[{'name': 'programId', 'in': 'path', 'required': True, 'description': 'id of program', 'schema': {'type': 'string'}, 'example': '4LVhtQsdfsdfrw3z8SgA'}, {'name': 'offset', 'in': 'query', 'required': False, 'description': 'Index of the first result to be returned. Default is 0.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 0}, {'name': 'limit', 'in': 'query', 'required': False, 'description': 'Maximum number of results to be returned. Default is 100.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 10}, 'example': 10}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ExternalSkillsets'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant': {'$ref': '#/components/examples/400_BadRequest_Variant_04_DEFAULT'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant': {'$ref': '#/components/examples/404_NotFound_Variant_03_DEFAULT'}}}}}}"
GET,/api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/skills/{skillId}/recommendations,Get a list of all content recommendations for a skill within a SkillSet.,Returns a paginated list of all content recommendations for a skill within a SkillSet.,"[{'name': 'programId', 'in': 'path', 'required': True, 'description': 'id of program', 'schema': {'type': 'string'}, 'example': '4LVhtQsdfsdfrw3z8SgA'}, {'name': 'skillsetId', 'in': 'path', 'required': True, 'description': 'id of Skillset', 'schema': {'type': 'string'}, 'example': 'IZWq23fdgdfafKX12w'}, {'name': 'skillId', 'in': 'path', 'required': True, 'description': 'id of skill', 'schema': {'type': 'string'}, 'example': 'data-analysis-software'}, {'name': 'externalUserId', 'in': 'query', 'required': False, 'description': 'unique id of learner', 'schema': {'type': 'string'}, 'example': '63261a1fxxxxx818578fa'}, {'name': 'email', 'in': 'query', 'required': False, 'description': 'email of learner', 'schema': {'type': 'string'}, 'example': 'example@coursera.org'}, {'name': 'offset', 'in': 'query', 'required': False, 'description': 'Index of the first result to be returned. Default is 0.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 10}, {'name': 'limit', 'in': 'query', 'required': False, 'description': 'Maximum number of results to be returned. Default is 100.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 10}, 'example': 10}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ExternalSkillRecommendation'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant': {'$ref': '#/components/examples/400_BadRequest_Variant_04_DEFAULT'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant_01': {'$ref': '#/components/examples/404_NotFound_Variant_04_DEFAULT'}, 'variant_02': {'$ref': '#/components/examples/404_NotFound_Variant_03_DEFAULT'}}}}}}"
GET,/api/rest/v1/enterprise/programs/{programId}/skillsets/{skillsetId}/recommendations,Get a list of all content recommendations for a SkillSet.,Returns a paginated list of all content recommendations for a SkillSet.,"[{'name': 'programId', 'in': 'path', 'required': True, 'description': 'id of program', 'schema': {'type': 'string'}, 'example': '4LVhtQsdfsdfrw3z8SgA'}, {'name': 'skillsetId', 'in': 'path', 'required': True, 'description': 'id of Skillset', 'schema': {'type': 'string'}, 'example': 'IZWq23fdgdfafKX12w'}, {'name': 'externalUserId', 'in': 'query', 'required': False, 'description': 'unique id of learner', 'schema': {'type': 'string'}, 'example': '63261a1fxxxxx818578fa'}, {'name': 'email', 'in': 'query', 'required': False, 'description': 'email of learner', 'schema': {'type': 'string'}, 'example': 'example@coursera.org'}, {'name': 'offset', 'in': 'query', 'required': False, 'description': 'Index of the first result to be returned. Default is 0.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 10}, {'name': 'limit', 'in': 'query', 'required': False, 'description': 'Maximum number of results to be returned. Default is 100.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 10}, 'example': 10}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ExternalSkillsetRecommendation'}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant_01': {'$ref': '#/components/examples/404_NotFound_Variant_04_DEFAULT'}, 'variant_02': {'$ref': '#/components/examples/404_NotFound_Variant_03_DEFAULT'}}}}}}"
GET,/api/rest/v1/enterprise/programs/{programId}/skillsets/learner-progress,Get Skillsets progress for a learner.,Returns the Skillset progress of a single learner in your learning program.,"[{'name': 'programId', 'in': 'path', 'required': True, 'description': 'id of program', 'schema': {'type': 'string'}, 'example': '4LVhtQsdfsdfrw3z8SgA'}, {'name': 'externalUserId', 'in': 'query', 'required': False, 'description': 'unique id of learner', 'schema': {'type': 'string', 'default': ''}, 'example': '63261a1fxxxxx818578fa'}, {'name': 'email', 'in': 'query', 'required': False, 'description': 'email of learner', 'schema': {'type': 'string', 'default': ''}, 'example': 'example@coursera.org'}, {'name': 'skillsetIds', 'in': 'query', 'required': True, 'description': 'a list of Skillset ids', 'schema': {'type': 'array', 'items': {'type': 'string'}}, 'example': ['IZWq23fdgdfafKX12w Ydo820fgadfUang78M Jonge358gieSpgn2sn pYngpsen628suGpenm']}, {'name': 'offset', 'in': 'query', 'required': False, 'description': 'Index of the first result to be returned. Default is 0.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 10}, {'name': 'limit', 'in': 'query', 'required': False, 'description': 'Maximum number of results to be returned. Default is 100.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 10}, 'example': 10}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ExternalSkillsetProgressByLearner'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant': {'$ref': '#/components/examples/400_BadRequest_Variant_04_DEFAULT'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant': {'$ref': '#/components/examples/404_NotFound_Variant_04_DEFAULT'}}}}}}"
GET,/api/rest/v1/enterprise/programs/{programId}/skills/{skillId}/scores,Get Skill scores for a single skill.,Returns the Skill scores of a single skill for up to 10 learners.,"[{'name': 'programId', 'in': 'path', 'required': True, 'description': 'id of program', 'schema': {'type': 'string'}, 'example': '4LVhtQsdfsdfrw3z8SgA'}, {'name': 'skillId', 'in': 'path', 'required': True, 'description': 'id of skill', 'schema': {'type': 'string'}, 'example': 'data-analysis-software'}, {'name': 'emails', 'in': 'query', 'required': False, 'description': 'list of learner emails', 'schema': {'type': 'array', 'items': {'type': 'string'}, 'default': []}, 'example': ['example@coursera.org example1@coursera.org example2@coursera.org example3@coursera.org']}, {'name': 'externalUserIds', 'in': 'query', 'required': False, 'description': 'a list of learner externalIds', 'schema': {'type': 'array', 'items': {'type': 'string'}, 'default': []}, 'example': ['externalUserId1 externalUserId2 externalUserId3']}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ExternalSkillScorePerLearner'}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/403_Forbidden'}, 'examples': {'variant_01': {'$ref': '#/components/examples/403_Forbidden_Variant_01_DEFAULT'}, 'variant_02': {'$ref': '#/components/examples/403_Forbidden_Variant_02_DEFAULT'}}}}}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant_01': {'$ref': '#/components/examples/404_NotFound_Variant_04_DEFAULT'}, 'variant_02': {'$ref': '#/components/examples/404_NotFound_Variant_03_DEFAULT'}}}}}}"
GET,/api/rest/v1/enterprise/programs/{programId}/learner-skill-scores,Get the skills scores of a single learner in your learning program.,Returns the skills scores of a single learner in your learning program. Max 10 skills.,"[{'name': 'programId', 'in': 'path', 'required': True, 'description': 'id of program', 'schema': {'type': 'string'}, 'example': '4LVhtQsdfsdfrw3z8SgA'}, {'name': 'email', 'in': 'query', 'required': False, 'description': 'email of learner', 'schema': {'type': 'string'}, 'example': 'example@coursera.org'}, {'name': 'externalUserId', 'in': 'query', 'required': False, 'description': 'unique id of learner', 'schema': {'type': 'string'}, 'example': '63261a1fxxxxx818578fa'}, {'name': 'skillIds', 'in': 'query', 'required': True, 'description': 'a list of skillIds', 'schema': {'type': 'array', 'items': {'type': 'string'}}, 'example': ['computer-engineering accounting communication software-engineering']}, {'name': 'offset', 'in': 'query', 'required': False, 'description': 'Index of the first result to be returned. Default is 0.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 10}, {'name': 'limit', 'in': 'query', 'required': False, 'description': 'Maximum number of results to be returned. Default is 100.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 10}, 'example': 10}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ExternalLearnerWithSkillScores'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant': {'$ref': '#/components/examples/400_BadRequest_Variant_04_DEFAULT'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/403_Forbidden'}, 'examples': {'variant_01': {'$ref': '#/components/examples/403_Forbidden_Variant_01_DEFAULT'}, 'variant_02': {'$ref': '#/components/examples/403_Forbidden_Variant_02_DEFAULT'}}}}}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant_01': {'$ref': '#/components/examples/404_NotFound_Variant_04_DEFAULT'}, 'variant_02': {'$ref': '#/components/examples/404_NotFound_Variant_03_DEFAULT'}}}}}}"
GET,/api/rest/v1/enterprise/program/{programId}/skillsetReport,Get all Skillsets reports of a program.,Returns a paginated list of Skillsets reports of the given program.,"[{'name': 'programId', 'in': 'path', 'required': True, 'description': 'id of program', 'schema': {'type': 'string'}, 'example': '4LVhtQsdfsdfrw3z8SgA'}, {'name': 'offset', 'in': 'query', 'required': False, 'description': 'Index of the first result to be returned. Default is 0.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 10}, {'name': 'limit', 'in': 'query', 'required': False, 'description': 'Maximum number of results to be returned. Default is 100.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 10}, 'example': 10}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ExternalUserSkillsetReport'}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant': {'$ref': '#/components/examples/404_NotFound_Variant_03_DEFAULT'}}}}}}"
GET,/api/rest/v1/enterprise/organizations/{orgId}/skillsets,Get all Skillsets in an organization.,Returns a paginated list of all SkillSets in an enterprise organization. Each entry in the list represents a single SkillSet.,"[{'name': 'orgId', 'in': 'path', 'required': True, 'description': 'id of organization', 'schema': {'type': 'string'}, 'example': 'your_org_id'}, {'name': 'offset', 'in': 'query', 'required': False, 'description': 'value of nextToken returned by previous request', 'schema': {'type': 'string', 'default': ''}, 'example': '3adj45u'}, {'name': 'limit', 'in': 'query', 'required': False, 'description': 'Maximum number of results to be returned. Default is 100.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 10}, 'example': 10}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ExternalSkillsetsWithPrograms'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant': {'$ref': '#/components/examples/400_BadRequest_Variant_04_DEFAULT'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}}"
GET,/api/rest/v1/enterprise/organizations/{orgId}/skillsetReport,Get Skillsets reports of an organization.,Returns a paginated list of Skillsets reports of the given organization.,"[{'name': 'orgId', 'in': 'path', 'required': True, 'description': 'id of organization', 'schema': {'type': 'string'}, 'example': 'your_org_id'}, {'name': 'offset', 'in': 'query', 'required': False, 'description': 'Index of the first result to be returned. Default is 0.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 0}, 'example': 10}, {'name': 'limit', 'in': 'query', 'required': False, 'description': 'Maximum number of results to be returned. Default is 100.', 'schema': {'type': 'integer', 'format': 'int32', 'default': 10}, 'example': 10}]","{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ExternalUserSkillsetReport'}}}}, '400': {'description': 'Response returned when the request is invalid', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/400_BadRequest'}, 'examples': {'variant': {'$ref': '#/components/examples/400_BadRequest_Variant_04_DEFAULT'}}}}}, '401': {'$ref': '#/components/responses/ERROR_401'}, '403': {'$ref': '#/components/responses/ERROR_403'}, '404': {'description': 'Response returned when the requested resource was not found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/404_NotFound'}, 'examples': {'variant': {'$ref': '#/components/examples/404_NotFound_Variant_03_DEFAULT'}}}}}}"
